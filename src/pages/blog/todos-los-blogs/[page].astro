---
import { sluglify, unsluglify, getPosts, formatDate } from '@utils/index'
import { siteConfig } from '@src/data/config'
import Pagination from '@components/Pagination.astro'
import ListCategories from '@components/ListCategories.astro'
import Layout from '@layouts/Layout.astro'
import Card from '@components/ui/Card.astro'
import Header from '@components/Header.astro'
import PostCard from '@components/PostCard.astro'
import type { CollectionEntry } from 'astro:content'

interface Props {
	post: CollectionEntry<'blog'>
	page: {
		data: CollectionEntry<'blog'>[]
		currentPage: number
		lastPage: number
	}
}
export async function getStaticPaths({ paginate }: any) {
	const allPosts = await getPosts()

	return paginate(allPosts, {
		params: { page: '1' },
		pageSize: siteConfig.paginationSize
	})
}

const params = Astro.params
const { page } = Astro.props
const posts = page.data
---

<Layout title="Todos los Posts">
	<Header
		title="Todos los"
		titleCaption="Posts"
		description="Aquí encontrarás todos los"
		descriptionCaption="Posts"
	/>
	<ListCategories />
	<section class="mx-auto my-4 max-w-5xl ">
		{
			page.currentPage === 1 ? (
				<>
					<div class="mb-4 grid grid-cols-1">
						{page.data.length > 0 && (
							<PostCard {...page.data[0]} />
						)}
					</div>
					<div class="mb-4 grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-2">
						{page.data.slice(1, 3).map((post) => (
							<PostCard {...post} />
						))}
					</div>
					<div class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
						{page.data.slice(3).map((post) => (
							<PostCard {...post} />
						))}
					</div>
				</>
			) : (
				<div class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
					{page.data.map((post) => (
						<PostCard {...post} />
					))}
				</div>
			)
		}
		<Pagination page={page} />
	</section>
</Layout>